
proxy_cache_key "$scheme$request_method$host$request_uri";

# caching for dynamically generated content like API calls for metrics or usb file list
proxy_cache_path /data/nginx/cache/short keys_zone=short:1m levels=1:2 inactive=10s max_size=100m use_temp_path=off;

# cache for static content, usually thumbnails are in kilobytes so 1GB should be enough in here
# otherwise you have insane amount of gcode files on the pendrive? :)
proxy_cache_path /data/nginx/cache/long keys_zone=long:10m levels=1:2 inactive=7d max_size=1G use_temp_path=off;

# added $cache in the front because I was lazy
log_format cache_log '$cache $remote_addr - $upstream_cache_status [$time_local]  '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';

server {
  listen 10001 default_server;
  server_name localhost;

  # your printer IP address and API key
  set $upstream http://192.168.1.25;
  proxy_set_header X-Api-Key hgyJKWXmhvEaPnK;

  client_body_buffer_size 128k;
  client_max_body_size 1G;
  proxy_buffering on;

  proxy_cache_use_stale updating; # return old content
  proxy_ignore_headers "Cache-Control"; # some responses got their own cache control and forbid caching, we override that
  proxy_cache_lock on;
  proxy_cache_background_update on;

  add_header X-Cache $upstream_cache_status;
  add_header X-Cache-Path $cache;

  access_log /dev/stdout cache_log;

  # thumbnails causes firmware to extract thumbnails from the gcode files and return them as png
  # we want to cache that aggresively
  location ~ /thumb/(.*)$ {
    proxy_pass $upstream;

    set $cache long;
    proxy_cache $cache;
    proxy_cache_valid 200 304 7d;
    proxy_cache_valid 404 24h; # some files do not contain thumbnails, cache that shorter
    expires 7dh;

  }

  location /api/ {
    proxy_pass $upstream;

    set $cache short;
    proxy_cache $cache;
    proxy_cache_valid 200 1s;
    proxy_cache_valid 304 10s;
    expires 1s;

    access_log off; # comment out if you want to see every-second api calls flood
  }

  location / {
    proxy_pass $upstream;

    set $cache long;
    proxy_cache $cache;
    proxy_cache_valid 200 304 7d;
    expires 7d;

  }

}
